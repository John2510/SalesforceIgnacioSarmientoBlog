#
# GitLab CI/CD Pipeline
#
#
# Run these commands before executing any build jobs,
# such as to install dependencies and set environment variables
#

#
# Define the stages of our pipeline
#
stages:
    - TEST SANDBOX
    

#########################
## FUNCTIONS BEGINNING ##
#########################

#
# Installations scripts to openssl credentials and Salesforce DX
#
.installCodeSoftware: &installCodeSoftware
    - echo "********************* Installing code software *********************";
    # Decrypt server key
    - openssl enc -aes-256-cbc -md sha256 -salt -d -in assets/server.key.enc -out assets/server.key -k $SERVER_KEY_PASSWORD
    # Install jq, a json parsing library
    - apt update && apt -y install jq
    # Setup SFDX environment variables
    # https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_cli_env_variables.htm
    - export SALESFORCE_CLI_URL=https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
    - export SFDX_AUTOUPDATE_DISABLE=false
    - export SFDX_USE_GENERIC_UNIX_KEYCHAIN=true
    - export SFDX_DOMAIN_RETRY=600
    - export SFDX_LOG_LEVEL=DEBUG
    # Install Salesforce CLI
    - mkdir sfdx
    - wget -qO- $SALESFORCE_CLI_URL | tar xJ -C sfdx --strip-components 1
    - './sfdx/install'
    - export PATH=./sfdx/$(pwd):$PATH
    # Output CLI version and plug-in information
    - sfdx update
    - sfdx --version
    - sfdx plugins --core

#
# Authentication scripts to connect with a Salesforce sandbox/production
#
.authenticateAgainstSalesforce: &authenticateAgainstSalesforce
    - echo "********************* Authenticating against Salesforce *********************";
    - sfdx force:auth:jwt:grant --setdefaultdevhubusername --clientid $SF_CUSTOMER_KEY --jwtkeyfile assets/server.key --username $SF_USERNAME
    - sfdx force:config:set defaultusername=$SF_USERNAME

#
# Deployment scripts to Salesforce sandbox/production from $PACKAGEXML_FOLDER folder
#
.deployPackageToSalesforce: &deployPackageToSalesforce
    - echo "********************* Deploying package to Salesforce *********************";
    - sfdx force:source:deploy -x manifest/$PACKAGEXML_FOLDER/package.xml

#
# Validation scripts to Salesforce sandbox/production from $PACKAGEXML_FOLDER folder
#
.validatePackageInSalesforce: &validatePackageInSalesforce
    - echo "********************* Validating package in Salesforce *********************";
    - sfdx force:source:deploy -x manifest/$PACKAGEXML_FOLDER/package.xml --checkonly --testlevel RunLocalTests


####################
## FUNCTIONS END  ##
####################

#
# Validate package in Test Sandbox
#
validate-test-sandbox:
    stage: TEST SANDBOX
    variables:
        SF_CUSTOMER_KEY: $SF_CONSUMER_KEY_TEST_SANDBOX
        SF_USERNAME: $SF_USERNAME_TEST_SANDBOX
    when: manual
    script:
        - *installCodeSoftware
        - *authenticateAgainstSalesforce
        - *validatePackageInSalesforce

#
# Deploy package to Test Sandbox
#
deploy-test-sandbox:
    stage: TEST SANDBOX
    variables:
        SF_CUSTOMER_KEY: $SF_CONSUMER_KEY_TEST_SANDBOX
        SF_USERNAME: $SF_USERNAME_TEST_SANDBOX
    when: manual
    script:
        - *installCodeSoftware
        - *authenticateAgainstSalesforce
        - *deployPackageToSalesforce
